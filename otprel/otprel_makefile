BASEDIR = $(shell pwd)
REBAR = rebar3
ELVIS = $(BASEDIR)/elvis


APPNAME = $(shell basename $(BASEDIR))
ifneq ($(APPNAME), {{app}})
  APPNAME = {{app}}
endif

RELPATH = _build/default/rel/$(APPNAME)
TESTRELPATH = _build/test/rel/$(APPNAME)
PRODRELPATH = _build/prod/rel/$(APPNAME)
DEVRELPATH = _build/dev/rel/$(APPNAME)

SHELL = /bin/bash
APPVSN = $(shell ./.package.sh version)

# dialyzer
LINTERS = elvis xref eunit

REGRESSION_TEST_DIR := test/regression
REGRESSION_TEST_FILES := $(shell find $(REGRESSION_TEST_DIR) -name '*_SUITE.erl' -exec basename '{}' \;)
REGRESSION_TEST_SUITES := $(shell echo $(REGRESSION_TEST_FILES) | sed -e 's/.erl//g' | sed -e 's/ /,/g')

export CT_APPVSN = $(APPVSN)
export CT_RELPATH = $(BASEDIR)/_build/dev1/rel/$(APPNAME)

.DEFAULT_GOAL := help

ifndef {{app}}_ENV
export {{app}}_ENV = local
endif

.PHONY: elvis debian deploy tag help

compile: ## compile
	$(REBAR) compile

eunit: ## eunit
	$(REBAR) eunit

xref: ## xref
	$(REBAR) xref

dialyzer: ## dialyzer
	$(REBAR) dialyzer

elvis: ## elvis
	$(ELVIS) rock -c elvis.config

release: $(LINTERS) ## release
	$(REBAR) release

test-release: $(LINTERS) ## test release
	$(REBAR) as test release

console: release ## console
	cd $(RELPATH) && sudo ./bin/$(APPNAME) console

regression-test: test-release ## ct test
	sudo mkdir -p /var/lib/xaptum/$(APPNAME) && \
	sudo $(REBAR) ct -v --sname {{app}}-$(test)@localhost \
	--dir test/regression \
	--suite=$(REGRESSION_TEST_SUITES) \
	--include $(BASEDIR)/include \
	--sys_config $(TESTRELPATH)/releases/$(APPVSN)/sys.config

test-coverage-report: ## Test Coverate Report
	$(REBAR) cover --verbose

prod-release: regression-test ## prod release
	$(REBAR) as prod release

prod-tar: prod-release ## prod tar
	cd $(PRODRELPATH)/../ && rm -f $(APPNAME).tar.gz && tar -cvf $(APPNAME).tar $(APPNAME)/ && gzip $(APPNAME).tar
	mv $(PRODRELPATH)/../$(APPNAME).tar.gz $(BASEDIR)/_build/

dev-release: regression-test
	$(REBAR) as dev release

dev-tar: dev-release
	cd $(DEVRELPATH)/../ && rm -f $(APPNAME).tar.gz && tar -cvf $(APPNAME).tar $(APPNAME)/ && gzip $(APPNAME).tar
	mv $(DEVRELPATH)/../$(APPNAME).tar.gz $(BASEDIR)/_build/

todo: ## list todos
	$(REBAR) todo

clean: ## clean
	$(REBAR) clean
	rm -rf _build

debian: ## create deb
	./.package.sh debian

deploy: ## upload to apt
	./.package.sh deploy

tag: ## tag release
	./.package.sh tag

help: ## Display help information
	@grep -E '^[a-zA-Z0-9_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'
