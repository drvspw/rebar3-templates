version: 2.1

## Configuration
master_filter: &master_filter
  branches:
    only: master

## Common steps
build_steps: &build_steps
  executor: {{app}}_executor
  steps:
    - checkout

    - run:
        name: Pull Submodules
        command: |
          git submodule init
          git submodule update --remote

    - run:
        name: Build and test {{app}}
        command: |
          make ${{{app}}_ENV}-tar

    - run:
        name: Build {{app}} debian package
        command: |
          make debian

    # Perisist the _build/deb directory
    - persist_to_workspace:
        root: ~/{{app}}
        paths:
          - _build/deb/{{app}}*.deb

deploy_steps: &deploy_steps
  executor: {{app}}_executor
  steps:
    - checkout

    - attach_workspace:
        at: ~/{{app}}

    - run:
        name: deploy to apt.xaptum.xyz
        command: |
          make deploy

tag_steps: &tag_steps
  executor: {{app}}_executor
  steps:
    - checkout

    - run:
        name: tag built version
        command: |
          make tag

ami_steps: &ami_steps
  executor: {{app}}_executor
  steps:
    - checkout

    - attach_workspace:
        at: ~/{{app}}

    - run:
        name: Setup AWS credentials
        command: |
          ./.circleci/setup-aws-credentials.sh

    - run:
        name: Checkout infrastructure repo
        command: |
          git clone --depth 1 git@github.com:xaptum/infrastructure.git
          chmod 600 infrastructure/ansible-roles/xaptum-host-ssh/files/id_xaptum_sshhostca

    - run:
        name: Copy {{app}} debian to packer directory
        command: |
          mkdir -p infrastructure/enf-{{app}}/ansible/debs/${{{app}}_ENV}/
          cp _build/deb/{{app}}*.deb infrastructure/enf-xdnsapi/ansible/debs/${{{app}}_ENV}/

    - run:
        name: Build AMI
        command: |
          cd infrastructure/enf-{{app}}/packer && \
            make AWS_ENV=${{{app}}_ENV} {{app}}

    - run:
        name: Notify AMI
        command: |
          ./.circleci/notify-slack.sh

executors:
  {{app}}_executor:
    docker:
      # specify the version here
      - image: xaptumeng/{{app}}-build

      - image: circleci/mariadb

      - image: circleci/postgres:9.6.2-alpine

    working_directory: ~/{{app}}
    environment:
      {{app}}_ENV: dev
      DEB_DIR: _build/deb


jobs:
  tag:
    <<: *tag_steps

  build_dev:
    <<: *build_steps

  deploy_dev:
    <<: *deploy_steps

  ami_dev:
    <<: *ami_steps

  build_prod:
    environment:
      {{app}}_ENV: prod
    <<: *build_steps

  deploy_prod:
    environment:
      {{app}}_ENV: prod
    <<: *deploy_steps

  ami_prod:
    environment:
      {{app}}_ENV: prod
    <<: *ami_steps

# Workflow
workflows:
  version: 2
  {{app}}-workflow:
    jobs:
      - build_dev:
          context: xaptum.xyz

      - deploy_dev:
          context: xaptum.xyz
          requires:
            - build_dev

      - ami_dev:
          context: xaptum.xyz
          requires:
            - build_dev

      - build_prod:
          context: xaptum.xyz
          filters:
            <<: *master_filter

      - deploy_prod:
          context: xaptum.xyz
          requires:
            - build_prod


      - ami_prod:
          context: xaptum.xyz
          requires:
            - build_prod

      - tag:
          context: xaptum.xyz
          requires:
            - build_prod
